// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from ToneTimer.djinni

#include "NativeTimerViewModel.hpp"  // my header
#include "NativeTimerViewModel.hpp"

namespace djinni_generated {

NativeTimerViewModel::NativeTimerViewModel() : ::djinni::JniInterface<::tonetimer::TimerViewModel, NativeTimerViewModel>("rharriso/tonetimer/TimerViewModel$CppProxy") {}

NativeTimerViewModel::~NativeTimerViewModel() = default;


CJNIEXPORT void JNICALL Java_rharriso_tonetimer_TimerViewModel_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<djinni::CppProxyHandle<::tonetimer::TimerViewModel>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_rharriso_tonetimer_TimerViewModel_create(JNIEnv* jniEnv, jobject /*this*/)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::tonetimer::TimerViewModel::create();
        return ::djinni::release(::djinni_generated::NativeTimerViewModel::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT void JNICALL Java_rharriso_tonetimer_TimerViewModel_00024CppProxy_native_1pause(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::tonetimer::TimerViewModel>(nativeRef);
        ref->pause();
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_rharriso_tonetimer_TimerViewModel_00024CppProxy_native_1play(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::tonetimer::TimerViewModel>(nativeRef);
        ref->play();
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_rharriso_tonetimer_TimerViewModel_00024CppProxy_native_1reset(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::tonetimer::TimerViewModel>(nativeRef);
        ref->reset();
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

}  // namespace djinni_generated
