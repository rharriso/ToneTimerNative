// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from ToneTimer.djinni

#pragma once

#include "config.hpp"
#include "djinni_support.hpp"

namespace djinni_generated {

class NativeConfig final {
public:
    using CppType = ::tonetimer::Config;
    using JniType = jobject;

    using Boxed = NativeConfig;

    ~NativeConfig();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    NativeConfig();
    friend ::djinni::JniClass<NativeConfig>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("rharriso/tonetimer/Config") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(IIIII)V") };
    const jfieldID field_mIntervalDuration { ::djinni::jniGetFieldID(clazz.get(), "mIntervalDuration", "I") };
    const jfieldID field_mIntervalBreak { ::djinni::jniGetFieldID(clazz.get(), "mIntervalBreak", "I") };
    const jfieldID field_mSetSize { ::djinni::jniGetFieldID(clazz.get(), "mSetSize", "I") };
    const jfieldID field_mSetBreak { ::djinni::jniGetFieldID(clazz.get(), "mSetBreak", "I") };
    const jfieldID field_mSetCount { ::djinni::jniGetFieldID(clazz.get(), "mSetCount", "I") };
};

}  // namespace djinni_generated
