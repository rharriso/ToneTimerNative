// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from ToneTimer.djinni

#include "NativeSettingsViewModel.hpp"  // my header
#include "Marshal.hpp"

namespace djinni_generated {

NativeSettingsViewModel::NativeSettingsViewModel() : ::djinni::JniInterface<::tonetimer::SettingsViewModel, NativeSettingsViewModel>("rharriso/tonetimer/SettingsViewModel$CppProxy") {}

NativeSettingsViewModel::~NativeSettingsViewModel() = default;


CJNIEXPORT void JNICALL Java_rharriso_tonetimer_SettingsViewModel_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<djinni::CppProxyHandle<::tonetimer::SettingsViewModel>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_rharriso_tonetimer_SettingsViewModel_00024CppProxy_native_1setIntervalDuration(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jint j_d)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::tonetimer::SettingsViewModel>(nativeRef);
        ref->setIntervalDuration(::djinni::I32::toCpp(jniEnv, j_d));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_rharriso_tonetimer_SettingsViewModel_00024CppProxy_native_1setIntervalBreak(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jint j_b)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::tonetimer::SettingsViewModel>(nativeRef);
        ref->setIntervalBreak(::djinni::I32::toCpp(jniEnv, j_b));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_rharriso_tonetimer_SettingsViewModel_00024CppProxy_native_1setSetSize(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jint j_s)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::tonetimer::SettingsViewModel>(nativeRef);
        ref->setSetSize(::djinni::I32::toCpp(jniEnv, j_s));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_rharriso_tonetimer_SettingsViewModel_00024CppProxy_native_1setSetBreak(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jint j_b)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::tonetimer::SettingsViewModel>(nativeRef);
        ref->setSetBreak(::djinni::I32::toCpp(jniEnv, j_b));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_rharriso_tonetimer_SettingsViewModel_00024CppProxy_native_1setSetCount(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jint j_c)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::tonetimer::SettingsViewModel>(nativeRef);
        ref->setSetCount(::djinni::I32::toCpp(jniEnv, j_c));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

}  // namespace djinni_generated
