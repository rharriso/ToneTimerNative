// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from ToneTimer.djinni

#include "NativeSettingsViewModel.hpp"  // my header
#include "NativeSettingsViewModel.hpp"

namespace djinni_generated {

NativeSettingsViewModel::NativeSettingsViewModel() : ::djinni::JniInterface<::tonetimer::SettingsViewModel, NativeSettingsViewModel>("rharriso/tonetimer/SettingsViewModel$CppProxy") {}

NativeSettingsViewModel::~NativeSettingsViewModel() = default;


CJNIEXPORT void JNICALL Java_rharriso_tonetimer_SettingsViewModel_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<djinni::CppProxyHandle<::tonetimer::SettingsViewModel>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_rharriso_tonetimer_SettingsViewModel_create(JNIEnv* jniEnv, jobject /*this*/)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::tonetimer::SettingsViewModel::create();
        return ::djinni::release(::djinni_generated::NativeSettingsViewModel::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT void JNICALL Java_rharriso_tonetimer_SettingsViewModel_00024CppProxy_native_1incIntervalDuration(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::tonetimer::SettingsViewModel>(nativeRef);
        ref->incIntervalDuration();
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_rharriso_tonetimer_SettingsViewModel_00024CppProxy_native_1decIntervalDuration(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::tonetimer::SettingsViewModel>(nativeRef);
        ref->decIntervalDuration();
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_rharriso_tonetimer_SettingsViewModel_00024CppProxy_native_1incIntervalBreak(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::tonetimer::SettingsViewModel>(nativeRef);
        ref->incIntervalBreak();
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_rharriso_tonetimer_SettingsViewModel_00024CppProxy_native_1decIntervalBreak(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::tonetimer::SettingsViewModel>(nativeRef);
        ref->decIntervalBreak();
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_rharriso_tonetimer_SettingsViewModel_00024CppProxy_native_1incSetSize(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::tonetimer::SettingsViewModel>(nativeRef);
        ref->incSetSize();
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_rharriso_tonetimer_SettingsViewModel_00024CppProxy_native_1decSetSize(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::tonetimer::SettingsViewModel>(nativeRef);
        ref->decSetSize();
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_rharriso_tonetimer_SettingsViewModel_00024CppProxy_native_1incSetCount(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::tonetimer::SettingsViewModel>(nativeRef);
        ref->incSetCount();
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_rharriso_tonetimer_SettingsViewModel_00024CppProxy_native_1decSetCount(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::tonetimer::SettingsViewModel>(nativeRef);
        ref->decSetCount();
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_rharriso_tonetimer_SettingsViewModel_00024CppProxy_native_1incSetBreak(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::tonetimer::SettingsViewModel>(nativeRef);
        ref->incSetBreak();
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_rharriso_tonetimer_SettingsViewModel_00024CppProxy_native_1decSetBreak(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::tonetimer::SettingsViewModel>(nativeRef);
        ref->decSetBreak();
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

}  // namespace djinni_generated
