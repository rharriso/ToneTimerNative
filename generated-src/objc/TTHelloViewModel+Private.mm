// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from ToneTimer.djinni

#import "TTHelloViewModel+Private.h"
#import "TTHelloViewModel.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#import "DJIMarshal+Private.h"
#include <exception>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface TTHelloViewModel ()

- (id)initWithCpp:(const std::shared_ptr<::tonetimer::HelloViewModel>&)cppRef;

@end

@implementation TTHelloViewModel {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::tonetimer::HelloViewModel>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::tonetimer::HelloViewModel>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

- (nonnull NSString *)getGreeting:(nonnull NSString *)name {
    try {
        auto r = _cppRefHandle.get()->getGreeting(::djinni::String::toCpp(name));
        return ::djinni::String::fromCpp(r);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace djinni_generated {

auto HelloViewModel::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return objc->_cppRefHandle.get();
}

auto HelloViewModel::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return ::djinni::get_cpp_proxy<TTHelloViewModel>(cpp);
}

}  // namespace djinni_generated

@end
